{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "ConfluenceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						786,
						364
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"81": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Confluence.png"
								},
								"width": {
									"type": "double",
									"value": 240
								},
								"height": {
									"type": "double",
									"value": 240
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1.0925925970077515
									]
								}
							},
							"85": {
								"textContent": {
									"type": "string",
									"value": "Mode: 0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"Mode: \" + getAttr(\"mode\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										104,
										166
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"87": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										81.42702666581386,
										98.99963943865805
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"93": {
								"textContent": {
									"type": "string",
									"value": "in0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										26,
										128
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"94": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										30.675243553471205,
										80.05506823139422
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"95": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										221,
										128
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"96": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										131.23503055645347,
										80.05544254964548
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": "in1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										127,
										22
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"98": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										81.32579298241433,
										27.070951286622176
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"99": {
								"textContent": {
									"type": "string",
									"value": "out1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										123,
										255
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"100": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										82.23513598215902,
										143.5553523651015
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "81",
								"dest": "87"
							},
							{
								"src": "87",
								"dest": "85"
							},
							{
								"src": "81",
								"dest": "94"
							},
							{
								"src": "94",
								"dest": "93"
							},
							{
								"src": "81",
								"dest": "96"
							},
							{
								"src": "96",
								"dest": "95"
							},
							{
								"src": "81",
								"dest": "98"
							},
							{
								"src": "98",
								"dest": "97"
							},
							{
								"src": "81",
								"dest": "100"
							},
							{
								"src": "100",
								"dest": "99"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Confluence/0.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon"
			},
			"1": {
				"typename": {
					"type": "string",
					"value": "SegmentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1282,
						424
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"78": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Segment.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Segment/1.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon"
			},
			"2": {
				"typename": {
					"type": "string",
					"value": "SinkIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1635,
						445
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"76": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Sink.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"83": {
								"textContent": {
									"type": "string",
									"value": "consumed: 0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"consumed: \" + getAttr(\"counter\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										27,
										143
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Sink/2.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon"
			},
			"3": {
				"typename": {
					"type": "string",
					"value": "ScheduleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1736,
						200
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"101": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Schedule.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"103": {
								"textContent": {
									"type": "string",
									"value": "Schedule"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										38,
										19
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Schedule/3.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/ScheduleIcon"
			},
			"4": {
				"typename": {
					"type": "string",
					"value": "CurrItemIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1798,
						318
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"109": {
								"textContent": {
									"type": "string",
									"value": "CurrItem"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										117,
										21
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"114": {
								"r": {
									"type": "double",
									"value": 50
								},
								"rays": {
									"type": "int",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffd700",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Star",
								"position": {
									"type": "list<double>",
									"value": [
										108,
										45
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/CurrItem/4.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/CurrItemIcon"
			},
			"6": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1182.5,
						478
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-17.62424459168983,0%",
										"0;-12.628506898444414,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0.4166892317935739"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;137.52810903564296,99.99735547680707%",
										"0;-2.9999013543750834,0.7272534943767773%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0.4166892317935731"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/6.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon/0.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/6.instance": "M1045,477L1182.5,478",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/6.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/1.instance": "M1182.57467272401,478.0005430743564L1319.999018895868,478.9999928646972"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"7": {
				"typename": {
					"type": "string",
					"value": "SegmentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						895,
						720
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"78": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Segment.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Segment/7.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon"
			},
			"8": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out1Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						957.5,
						673
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"65": {
								"textContent": {
									"type": "string",
									"value": "out1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.313514374434476,0%",
										"0;-13.506039798316806,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;80.01059257376332"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.43924203628569,17.34661080830311%",
										"0;87.3054694844783,98.48398394391477%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;80.01059257376335"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out1/8.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon/0.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out1Link/8.instance": "M942,585L957.5,673",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out1Link/8.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/7.instance": "M957.5260648798773,673.1479812534961L972.999882678529,760.9993339168104"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out1Link"
			},
			"10": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "highest_priorityLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1755.9568965707067,
						395.64396545384
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.12476244951631,-28.682156409252773%",
										"0;84.50265939931711,95.79840240690426%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;106.66776303962698"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/highest_priority/10.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/ScheduleIcon/3.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/highest_priorityLink/10.instance": "M1781,312L1755.9568965707067,395.64396545384",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/highest_priorityLink/10.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/2.instance": "M1755.9569956589628,395.6436344990642L1731.0001980249142,478.99933859678697"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/highest_priorityLink"
			},
			"13": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						993.5,
						672.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-26.328952089290965,-28.911568755298354%",
										"0;-73.3427936652156,-95.72941654532141%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-106.80502093753782"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/13.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/7.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/13.instance": "M1016,747L993.5,672.5",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/13.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon/0.instance": "M993.4565640198194,672.356178643402L971.0002245725219,598.0007435845724"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"14": {
				"typename": {
					"type": "string",
					"value": "SegmentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						386,
						465
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"78": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Segment.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Segment/14.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon"
			},
			"15": {
				"typename": {
					"type": "string",
					"value": "SegmentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						827,
						117
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"78": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Segment.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Segment/15.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon"
			},
			"16": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "in1Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						911.5,
						320.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"62": {
								"textContent": {
									"type": "string",
									"value": "in1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;12.418282405535933,0%",
										"0;-1.8813541753214622,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.98721249581665"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.49079754601226994,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.494423877797431,5.255883312276529%",
										"0;66.28886331638682,99.86178293325096%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.98721249581656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/in1/16.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/15.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/in1Link/16.instance": "M908,254L911.5,320.5",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/in1Link/16.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon/0.instance": "M911.5078709873754,320.64954876013286L914.9999525604674,386.99909864887786"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/in1Link"
			},
			"17": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						675.1490322373872,
						523.9825806475782
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.44105968105316,0%",
										"0;-10.078997857613444,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-6.666659890901344"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;153.38573178564513,99.32383714710159%",
										"0;-21.95543305407591,-11.609279666544412%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-6.666659890901405"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/17.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/14.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/17.instance": "M521,542L675.1490322373872,523.9825806475782",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/17.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon/0.instance": "M675.0742276769456,523.9913240377596L828.9991352096941,506.00010107938635"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"18": {
				"typename": {
					"type": "string",
					"value": "SourceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						42,
						468
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"72": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Source.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"88": {
								"textContent": {
									"type": "string",
									"value": "rate: 1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"rate: \" + getAttr(\"rate\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										22,
										147
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"90": {
								"textContent": {
									"type": "string",
									"value": "count: 0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"count: \" + getAttr(\"counter\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										172
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"117": {
								"textContent": {
									"type": "string",
									"value": "steps passed: 1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"steps passed: \" + getAttr(\"steps_passed\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										19,
										198
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Source/18.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon"
			},
			"19": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						289,
						564
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-17.1351657301841,0%",
										"0;-12.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.99954909830973,100%",
										"0;-4,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/19.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon/18.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/19.instance": "M156,564L289,564",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/19.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/14.instance": "M289.00045283018864,564L421.9995490983097,564"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"20": {
				"typename": {
					"type": "string",
					"value": "SourceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						490,
						88
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"72": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Source.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"88": {
								"textContent": {
									"type": "string",
									"value": "rate: 1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"rate: \" + getAttr(\"rate\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										22,
										147
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"90": {
								"textContent": {
									"type": "string",
									"value": "count: 1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"count: \" + getAttr(\"counter\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										172
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"117": {
								"textContent": {
									"type": "string",
									"value": "steps passed: 1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"steps passed: \" + getAttr(\"steps_passed\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										19,
										198
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Source/20.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon"
			},
			"21": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						735.6499999666806,
						181.50551020285766
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.47354761942779,0%",
										"0;-13.076847177472104,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;2.1037969468510727"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;122.4963502373298,99.93259632341845%",
										"0;0.49716796149431275,3.6709933343296517%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;2.1037969468510656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/21.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon/20.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/21.instance": "M613,177L735.6499999666806,181.50551020285766",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/21.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/15.instance": "M735.6497550688844,181.50550120661208L857.9995104706372,185.99998201728872"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"22": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						952.4756024214437,
						326.8518073006207
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-17.422353791766795,-16.244734615097183%",
										"0;-81.20130430762768,-98.67172136577463%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-99.34897758928736"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/22.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/ConfluenceIcon/0.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/22.instance": "M966,409L952.4756024214437,326.8518073006207",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/22.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/15.instance": "M952.4756612107328,326.85216439111827L939.0001174843079,245.00071360838913"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"24": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						738.8500000325183,
						216.98790322842888
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-124.1710531813776,-99.67639550118452%",
										"0;-6.0008084075087424,-8.038418992030964%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-175.3893506813394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/24.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/15.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/24.instance": "M863,227L738.8500000325183,216.98790322842888",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/24.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon/20.instance": "M738.850241967845,216.98792273934237L615.000483610822,207.00003900087276"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"25": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						565,
						353
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-49.28381991188462,-37.018611505760454%",
										"0;134.47986703619716,92.89576094841776%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;111.72709593591802"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/25.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon/20.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/25.instance": "M618,220L565,353",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/25.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/14.instance": "M564.9723194299415,353.06946256259954L512.0003496501787,485.99912257596674"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"26": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						306.8500000274349,
						499.5049999990855
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-134.7162964815386,-99.94449069791543%",
										"0;8.49276482133223,3.3314830232638175%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;178.09084756700364"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/26.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/14.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/26.instance": "M442,495L306.8500000274349,499.5049999990855",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/26.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SourceIcon/18.instance": "M306.8502222495353,499.5049925916822L172.00044422496572,503.99998519250113"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"27": {
				"typename": {
					"type": "string",
					"value": "WatercraftIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1240,
						135
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"74": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/watercraft.png"
								},
								"width": {
									"type": "double",
									"value": 100
								},
								"height": {
									"type": "double",
									"value": 100
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Watercraft/27.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/WatercraftIcon"
			},
			"29": {
				"typename": {
					"type": "string",
					"value": "SegmentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1464,
						290
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"78": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Segment.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Segment/29.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon"
			},
			"31": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1639.5002221342797,
						446.00021891494254
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.8949827333995,-80.08976854850822%",
										"0;-36.79619034311713,-59.880121691980406%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-143.21591070884563"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/31.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/2.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/31.instance": "M1693,486L1639.5002221342797,446.00021891494254",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/31.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/29.instance": "M1639.5002221342797,446.00021891494254L1586.0004442685595,406.0004378298851"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"32": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1449.500165874139,
						462.4997540988643
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.04106315428385,-78.87666523332446%",
										"0;59.65482070819729,61.469274289437195%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;142.07040216659317"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/32.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/29.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/32.instance": "M1522,406L1449.500165874139,462.4997540988643",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/32.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/1.instance": "M1449.500165874139,462.4997540988643L1377.0003317482776,518.9995081977286"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"33": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1436.9998575949999,
						418.000263824
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.73722606688284,0%",
										"0;-1.32170597669068,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-43.602757834204986"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.241239996164495,72.41386669431068%",
										"0;-62.89629084377242,-68.96543997089123%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-43.60275783420489"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/33.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/1.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/33.instance": "M1374,478L1436.9998575949999,418.000263824",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/33.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/29.instance": "M1436.9998575949999,418.000263824L1499.99971519,358.000527648"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"34": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1650.4998255184607,
						425.49979564148487
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;1.4308794875905733,0%",
										"0;-16.24678619289159,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;44.99998511451947"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.32825190837957,70.71069648933226%",
										"0;54.6713677819115,70.71065974797247%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;44.99998511451944"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/34.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/29.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/34.instance": "M1593,368L1650.4998255184607,425.49979564148487",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/34.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/2.instance": "M1650.4998255184607,425.49979564148487L1707.9996510369215,482.9995912829697"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"37": {
				"typename": {
					"type": "string",
					"value": "WatercraftIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1086,
						83
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"74": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/watercraft.png"
								},
								"width": {
									"type": "double",
									"value": 100
								},
								"height": {
									"type": "double",
									"value": 100
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Watercraft/37.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/WatercraftIcon"
			},
			"38": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "is_located_inLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1029.5,
						163
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"48": {
								"textContent": {
									"type": "string",
									"value": "watercraft"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;41.28048131429205,0%",
										"0;7.85857268640666,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;176.30861401354872"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.3128834355828221,
										"yoffset": -10.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-108.24191823239846,-99.79253089684582%",
										"0;10.991665580673214,6.438227799796523%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;176.30861401354872"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/is_located_in/38.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/WatercraftIcon/37.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink/38.instance": "M1138,156L1029.5,163",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink/38.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/15.instance": "M1029.3502765399342,163.00965957806878L921.0005526556096,169.9999643447994"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink"
			},
			"42": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "is_located_inLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1328.5,
						352.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"48": {
								"textContent": {
									"type": "string",
									"value": "watercraft"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4950251729321735,0%",
										"0;-56.50638008537976,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;82.8510805321207"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.3128834355828221,
										"yoffset": -10.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.468791000697593,12.444869033282725%",
										"0;147.00130287764387,99.22260445455179%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;82.85108053212073"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/is_located_in/42.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/WatercraftIcon/27.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink/42.instance": "M1310,205L1328.5,352.5",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink/42.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/1.instance": "M1328.5093056827448,352.5741939570189L1346.9998868225155,499.9990976389752"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink"
			},
			"48": {
				"typename": {
					"type": "string",
					"value": "WatercraftIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1401,
						124
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"74": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/watercraft.png"
								},
								"width": {
									"type": "double",
									"value": 100
								},
								"height": {
									"type": "double",
									"value": 100
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Watercraft/48.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/WatercraftIcon"
			},
			"49": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "is_located_inLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1506,
						275.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"48": {
								"textContent": {
									"type": "string",
									"value": "watercraft"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;1.4778384982498665,0%",
										"0;-24.014856104704876,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;67.64680231301062"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.3128834355828221,
										"yoffset": -10.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;25.699328263544658,38.03150297487866%",
										"0;51.97849729959614,92.48570041618215%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;67.6468023130106"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/is_located_in/49.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/WatercraftIcon/48.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink/49.instance": "M1484,222L1506,275.5",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink/49.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/29.instance": "M1506.0286457394968,275.5696612301401L1527.9999002468974,328.9997574185913"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/is_located_inLink"
			},
			"50": {
				"typename": {
					"type": "string",
					"value": "SinkIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						991,
						982
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"76": {
								"src": {
									"type": "string",
									"value": "/Formalisms/02_waterway/Images/Sink.png"
								},
								"width": {
									"type": "double",
									"value": 120
								},
								"height": {
									"type": "double",
									"value": 120
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"83": {
								"textContent": {
									"type": "string",
									"value": "consumed: 0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:\"consumed: \" + getAttr(\"counter\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										27,
										143
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/Sink/50.instance"
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon"
			},
			"51": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "out0Link"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1031,
						927.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"49": {
								"textContent": {
									"type": "string",
									"value": "out0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.71780403510786,0%",
										"0;-13.24288896413816,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;76.7198153078242"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.43558282208588955,
										"yoffset": -12.5
									}
								}
							},
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.89286614431876,22.971315695525295%",
										"0;79.58043830375368,97.3258375520936%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;76.71981530782415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/out0/51.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/7.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/51.instance": "M1012,847L1031,927.5",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link/51.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/50.instance": "M1031.0344616911932,927.646008744266L1049.999832642235,1007.9992909315747"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/out0Link"
			},
			"52": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1231.4309760992694,
						779.1332669252198
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.87867485309334,-45.99103158470638%",
										"0;224.70552527911025,88.79653717220363%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;117.38132050010438"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/52.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/1.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/52.instance": "M1347,556L1231.4309760992694,779.1332669252198",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/52.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/50.instance": "M1231.4311410966243,779.1329483588984L1116.000439759288,1001.9991509409418"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"53": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00ff7f",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "higher_priority_thanLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1056.5,
						923
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-36.25205641315051,-34.64462430014114%",
										"0;-86.61361149511731,-93.80698272038212%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-110.27010483859367"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/higher_priority_than/53.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/50.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/53.instance": "M1089,1011L1056.5,923",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink/53.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SegmentIcon/7.instance": "M1056.4479725096724,922.8591255646515L1024.0002228956648,835.000603532877"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/higher_priority_thanLink"
			},
			"55": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffd700",
						"stroke-dasharray": "",
						"stroke-opacity": 0.7,
						"stroke-width": 3
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "curr_itemLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1854,
						459.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-84.43040078984154,-94.70378276378003%",
										"0;37.076091362434454,32.11220220151154%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;161.2692064077969"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/02_waterway/02_waterway/curr_item/55.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/02_waterway/02_waterway.defaultIcons/CurrItemIcon/4.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/curr_itemLink/55.instance": "M1941,430L1854,459.5",
						"/Formalisms/02_waterway/02_waterway.defaultIcons/curr_itemLink/55.instance--/Formalisms/02_waterway/02_waterway.defaultIcons/SinkIcon/2.instance": "M1853.8576888497475,459.54825493025805L1767.0006230340375,488.99978874133205"
					}
				},
				"$type": "/Formalisms/02_waterway/02_waterway.defaultIcons/curr_itemLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/02_waterway/02_waterway.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"mode": {
					"type": "int",
					"value": "0"
				},
				"$type": "/Formalisms/02_waterway/02_waterway/Confluence"
			},
			"1": {
				"$type": "/Formalisms/02_waterway/02_waterway/Segment"
			},
			"2": {
				"counter": {
					"type": "int",
					"value": "0"
				},
				"$type": "/Formalisms/02_waterway/02_waterway/Sink"
			},
			"3": {
				"$type": "/Formalisms/02_waterway/02_waterway/Schedule"
			},
			"4": {
				"$type": "/Formalisms/02_waterway/02_waterway/CurrItem"
			},
			"6": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"7": {
				"$type": "/Formalisms/02_waterway/02_waterway/Segment"
			},
			"8": {
				"$type": "/Formalisms/02_waterway/02_waterway/out1"
			},
			"10": {
				"$type": "/Formalisms/02_waterway/02_waterway/highest_priority"
			},
			"13": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"14": {
				"$type": "/Formalisms/02_waterway/02_waterway/Segment"
			},
			"15": {
				"$type": "/Formalisms/02_waterway/02_waterway/Segment"
			},
			"16": {
				"$type": "/Formalisms/02_waterway/02_waterway/in1"
			},
			"17": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"18": {
				"counter": {
					"type": "int",
					"value": 0
				},
				"rate": {
					"type": "int",
					"value": "1"
				},
				"steps_passed": {
					"type": "int",
					"value": 1
				},
				"$type": "/Formalisms/02_waterway/02_waterway/Source"
			},
			"19": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"20": {
				"counter": {
					"type": "int",
					"value": 1
				},
				"rate": {
					"type": "int",
					"value": "1"
				},
				"steps_passed": {
					"type": "int",
					"value": 1
				},
				"$type": "/Formalisms/02_waterway/02_waterway/Source"
			},
			"21": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"22": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"24": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"25": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"26": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"27": {
				"$type": "/Formalisms/02_waterway/02_waterway/Watercraft"
			},
			"29": {
				"$type": "/Formalisms/02_waterway/02_waterway/Segment"
			},
			"31": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"32": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"33": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"34": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"37": {
				"$type": "/Formalisms/02_waterway/02_waterway/Watercraft"
			},
			"38": {
				"$type": "/Formalisms/02_waterway/02_waterway/is_located_in"
			},
			"42": {
				"$type": "/Formalisms/02_waterway/02_waterway/is_located_in"
			},
			"48": {
				"$type": "/Formalisms/02_waterway/02_waterway/Watercraft"
			},
			"49": {
				"$type": "/Formalisms/02_waterway/02_waterway/is_located_in"
			},
			"50": {
				"counter": {
					"type": "int",
					"value": "0"
				},
				"$type": "/Formalisms/02_waterway/02_waterway/Sink"
			},
			"51": {
				"$type": "/Formalisms/02_waterway/02_waterway/out0"
			},
			"52": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"53": {
				"$type": "/Formalisms/02_waterway/02_waterway/higher_priority_than"
			},
			"55": {
				"$type": "/Formalisms/02_waterway/02_waterway/curr_item"
			}
		},
		"edges": [
			{
				"src": "0",
				"dest": "6"
			},
			{
				"src": "6",
				"dest": "1"
			},
			{
				"src": "0",
				"dest": "8"
			},
			{
				"src": "8",
				"dest": "7"
			},
			{
				"src": "3",
				"dest": "10"
			},
			{
				"src": "10",
				"dest": "2"
			},
			{
				"src": "7",
				"dest": "13"
			},
			{
				"src": "13",
				"dest": "0"
			},
			{
				"src": "15",
				"dest": "16"
			},
			{
				"src": "16",
				"dest": "0"
			},
			{
				"src": "14",
				"dest": "17"
			},
			{
				"src": "17",
				"dest": "0"
			},
			{
				"src": "18",
				"dest": "19"
			},
			{
				"src": "19",
				"dest": "14"
			},
			{
				"src": "20",
				"dest": "21"
			},
			{
				"src": "21",
				"dest": "15"
			},
			{
				"src": "0",
				"dest": "22"
			},
			{
				"src": "22",
				"dest": "15"
			},
			{
				"src": "15",
				"dest": "24"
			},
			{
				"src": "24",
				"dest": "20"
			},
			{
				"src": "20",
				"dest": "25"
			},
			{
				"src": "25",
				"dest": "14"
			},
			{
				"src": "14",
				"dest": "26"
			},
			{
				"src": "26",
				"dest": "18"
			},
			{
				"src": "2",
				"dest": "31"
			},
			{
				"src": "31",
				"dest": "29"
			},
			{
				"src": "29",
				"dest": "32"
			},
			{
				"src": "32",
				"dest": "1"
			},
			{
				"src": "1",
				"dest": "33"
			},
			{
				"src": "33",
				"dest": "29"
			},
			{
				"src": "29",
				"dest": "34"
			},
			{
				"src": "34",
				"dest": "2"
			},
			{
				"src": "37",
				"dest": "38"
			},
			{
				"src": "38",
				"dest": "15"
			},
			{
				"src": "27",
				"dest": "42"
			},
			{
				"src": "42",
				"dest": "1"
			},
			{
				"src": "48",
				"dest": "49"
			},
			{
				"src": "49",
				"dest": "29"
			},
			{
				"src": "7",
				"dest": "51"
			},
			{
				"src": "51",
				"dest": "50"
			},
			{
				"src": "1",
				"dest": "52"
			},
			{
				"src": "52",
				"dest": "50"
			},
			{
				"src": "50",
				"dest": "53"
			},
			{
				"src": "53",
				"dest": "7"
			},
			{
				"src": "4",
				"dest": "55"
			},
			{
				"src": "55",
				"dest": "2"
			}
		],
		"metamodels": [
			"/Formalisms/02_waterway/02_waterway"
		]
	}
}